<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hd.mapper.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="hd.entity.SysRole" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="removed" property="removed" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, create_user, create_time, update_user, update_time, removed
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="hd.entity.SysRole" >
    insert into sys_role (id, name, create_user, 
      create_time, update_user, update_time, 
      removed)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{removed,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="hd.entity.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="removed != null" >
        removed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null" >
        #{removed,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hd.entity.SysRole" >
    update sys_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null" >
        removed = #{removed,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="hd.entity.SysRole" >
    update sys_role
    set name = #{name,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      removed = #{removed,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="list" resultMap="BaseResultMap" parameterType="hd.common.serach.SearchConditions" >
  	select 
    <include refid="Base_Column_List" />
    from sys_role
  	<include refid="generator_sql.generator_Example_Where_Clause" />
  </select>
   <select id="allotRole" resultType="hd.common.base.ZtreeNode" parameterType="java.lang.String" >
  	select m1.id ,"0" as pId, m1.name ,true as open , 
  	 case WHEN m2.role_id is not null THEN true else false end as checked from sys_role m1 LEFT JOIN 
	(select role_id from sys_user_role where user_id = #{userId,jdbcType=VARCHAR}) m2 
	on m1.id = m2.role_id where m1.removed = 0
  </select>
</mapper>